<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="MydbMysqli.php" path="/">
    <totals>
      <lines total="612" comments="192" code="420" executable="142" executed="142" percent="100.00"/>
      <methods count="31" tested="31" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="sql\MydbMysqli" start="51" executable="142" executed="142" crap="90">
      <namespace name="sql"/>
      <method name="__construct" signature="__construct(?mysqli $resource)" start="177" end="184" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="init" signature="init(): bool" start="190" end="207" crap="2" executable="5" executed="5" coverage="100"/>
      <method name="setTransportOptions" signature="setTransportOptions(sql\MydbOptionsInterface $options, sql\MydbEnvironmentInterface $environment): bool" start="215" end="246" crap="8" executable="16" executed="16" coverage="100"/>
      <method name="setTransactionIsolationLevel" signature="setTransactionIsolationLevel(string $level): bool" start="248" end="251" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="isTransactionOpen" signature="isTransactionOpen(): bool" start="253" end="259" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="isConnected" signature="isConnected(): bool" start="261" end="264" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="getMysqli" signature="getMysqli(): ?mysqli" start="266" end="269" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="realQuery" signature="realQuery(string $query): bool" start="274" end="281" crap="3" executable="3" executed="3" coverage="100"/>
      <method name="readServerResponse" signature="readServerResponse(sql\MydbEnvironmentInterface $environment): ?sql\MydbMysqli\MydbMysqliResult" start="286" end="321" crap="8" executable="18" executed="18" coverage="100"/>
      <method name="realEscapeString" signature="realEscapeString(string $string): ?string" start="326" end="333" crap="3" executable="3" executed="3" coverage="100"/>
      <method name="beginTransactionReadwrite" signature="beginTransactionReadwrite(): bool" start="338" end="349" crap="4" executable="6" executed="6" coverage="100"/>
      <method name="beginTransactionReadonly" signature="beginTransactionReadonly(): bool" start="354" end="365" crap="4" executable="6" executed="6" coverage="100"/>
      <method name="rollback" signature="rollback(): bool" start="370" end="379" crap="4" executable="4" executed="4" coverage="100"/>
      <method name="commitAndRelease" signature="commitAndRelease(): bool" start="384" end="393" crap="4" executable="4" executed="4" coverage="100"/>
      <method name="commit" signature="commit(): bool" start="395" end="404" crap="4" executable="4" executed="4" coverage="100"/>
      <method name="realConnect" signature="realConnect(string $host, string $username, string $password, string $dbname, ?int $port, ?string $socket, int $flags): bool" start="406" end="430" crap="4" executable="6" executed="6" coverage="100"/>
      <method name="mysqliReport" signature="mysqliReport(int $level): bool" start="432" end="435" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="mysqliQueryAsync" signature="mysqliQueryAsync(string $command): bool" start="437" end="445" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="close" signature="close(): bool" start="447" end="464" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="getConnectErrno" signature="getConnectErrno(): ?int" start="466" end="471" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="getConnectError" signature="getConnectError(): ?string" start="473" end="478" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="isServerGone" signature="isServerGone(): bool" start="480" end="483" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getError" signature="getError(): ?string" start="485" end="490" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="getErrNo" signature="getErrNo(): ?int" start="492" end="497" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="getAffectedRows" signature="getAffectedRows(): ?int" start="499" end="516" crap="4" executable="6" executed="6" coverage="100"/>
      <method name="getInsertId" signature="getInsertId()" start="521" end="526" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="autocommit" signature="autocommit(bool $enable): bool" start="528" end="543" crap="4" executable="5" executed="5" coverage="100"/>
      <method name="extractServerResponse" signature="extractServerResponse(sql\MydbEnvironmentInterface $environment, array $events): ?mysqli_result" start="549" end="573" crap="3" executable="10" executed="10" coverage="100"/>
      <method name="getWarnings" signature="getWarnings(): array" start="575" end="588" crap="2" executable="7" executed="7" coverage="100"/>
      <method name="getFieldCount" signature="getFieldCount(): ?int" start="595" end="598" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="getWarningCount" signature="getWarningCount(): ?int" start="605" end="610" crap="2" executable="3" executed="3" coverage="100"/>
    </class>
    <coverage>
      <line nr="179">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToRollbackTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommitTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testReuseResource"/>
        <covered by="phpunit\MysqliTest::testOptionsNoInit"/>
        <covered by="phpunit\MysqliTest::testQueryNoInit"/>
        <covered by="phpunit\MysqliTest::testReadResponseNoInit"/>
        <covered by="phpunit\MysqliTest::testExtractResponseNoInit"/>
        <covered by="phpunit\MysqliTest::testEscapeNoInit"/>
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
        <covered by="phpunit\MysqliTest::testAsyncNoInit"/>
        <covered by="phpunit\MysqliTest::testCloseNoInit"/>
        <covered by="phpunit\MysqliTest::testAffectedRowsNoInit"/>
        <covered by="phpunit\MysqliTest::testWarningsNoInit"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\ResourceTest::testSimpleClose"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="180">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToRollbackTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommitTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testOptionsNoInit"/>
        <covered by="phpunit\MysqliTest::testQueryNoInit"/>
        <covered by="phpunit\MysqliTest::testReadResponseNoInit"/>
        <covered by="phpunit\MysqliTest::testExtractResponseNoInit"/>
        <covered by="phpunit\MysqliTest::testEscapeNoInit"/>
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
        <covered by="phpunit\MysqliTest::testAsyncNoInit"/>
        <covered by="phpunit\MysqliTest::testCloseNoInit"/>
        <covered by="phpunit\MysqliTest::testAffectedRowsNoInit"/>
        <covered by="phpunit\MysqliTest::testWarningsNoInit"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\ResourceTest::testSimpleClose"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="183">
        <covered by="phpunit\MysqliTest::testReuseResource"/>
      </line>
      <line nr="192">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testReuseResource"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="196">
        <covered by="phpunit\MysqliTest::testReuseResource"/>
      </line>
      <line nr="203">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="204">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="206">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="217">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testOptionsNoInit"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="218">
        <covered by="phpunit\MysqliTest::testOptionsNoInit"/>
      </line>
      <line nr="221">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="222">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="230">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="231">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="232">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="235">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="236">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="237">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="240">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="241">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="242">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="243">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="244">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="245">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="250">
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
      </line>
      <line nr="258">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="263">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToRollbackTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommitTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\ResourceTest::testSimpleClose"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="268">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\MysqliTest::testAsyncNoInit"/>
      </line>
      <line nr="276">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testQueryNoInit"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="277">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="280">
        <covered by="phpunit\MysqliTest::testQueryNoInit"/>
      </line>
      <line nr="288">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testReadResponseNoInit"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="289">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="291">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="293">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="295">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="297">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="298">
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
      </line>
      <line nr="300">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="301">
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
      </line>
      <line nr="305">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="307">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="308">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="309">
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
      </line>
      <line nr="312">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="313">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="314">
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
      </line>
      <line nr="317">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="320">
        <covered by="phpunit\MysqliTest::testReadResponseNoInit"/>
      </line>
      <line nr="328">
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MysqliTest::testEscapeNoInit"/>
      </line>
      <line nr="329">
        <covered by="phpunit\MysqliTest::testEscapeNoInit"/>
      </line>
      <line nr="332">
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
      </line>
      <line nr="340">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="341">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="342">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="343">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="345">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="348">
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
      </line>
      <line nr="356">
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
      </line>
      <line nr="357">
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
      </line>
      <line nr="358">
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
      </line>
      <line nr="359">
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
      </line>
      <line nr="361">
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
      </line>
      <line nr="364">
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
      </line>
      <line nr="372">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="373">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="375">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="378">
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
      </line>
      <line nr="386">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="387">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="389">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="392">
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
      </line>
      <line nr="397">
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
      </line>
      <line nr="398">
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
      </line>
      <line nr="400">
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
      </line>
      <line nr="403">
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
      </line>
      <line nr="415">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="420">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="421">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="424">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="426">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="429">
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
      </line>
      <line nr="434">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="439">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\MysqliTest::testAsyncNoInit"/>
      </line>
      <line nr="440">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\MysqliTest::testAsyncNoInit"/>
      </line>
      <line nr="441">
        <covered by="phpunit\MysqliTest::testAsyncNoInit"/>
      </line>
      <line nr="444">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
      </line>
      <line nr="449">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testCloseNoInit"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="450">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="454">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="455">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="458">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="460">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="463">
        <covered by="phpunit\MysqliTest::testCloseNoInit"/>
      </line>
      <line nr="468">
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
      </line>
      <line nr="469">
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
      </line>
      <line nr="470">
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
      </line>
      <line nr="475">
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
      </line>
      <line nr="476">
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
      </line>
      <line nr="477">
        <covered by="phpunit\ExceptionTest::testFailedToConnect"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectAfterRetry"/>
        <covered by="phpunit\ExceptionTest::testFailedToConnectLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToCommandLazy"/>
        <covered by="phpunit\ExceptionTest::testFailedToBeginTransaction"/>
        <covered by="phpunit\ExceptionTest::testFailedToEscapeLazy"/>
      </line>
      <line nr="482">
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
      </line>
      <line nr="487">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="488">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="489">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="494">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="495">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="496">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="501">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\MysqliTest::testAffectedRowsNoInit"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="502">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="503">
        <covered by="phpunit\MysqliTest::testAffectedRowsNoInit"/>
      </line>
      <line nr="504">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\MysqliTest::testAffectedRowsNoInit"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="505">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="515">
        <covered by="phpunit\MysqliTest::testAffectedRowsNoInit"/>
      </line>
      <line nr="523">
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
      </line>
      <line nr="524">
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
      </line>
      <line nr="525">
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
      </line>
      <line nr="530">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="531">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="536">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
      </line>
      <line nr="539">
        <covered by="phpunit\AsyncTest::testAsyncReal"/>
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testEscape"/>
        <covered by="phpunit\MetaTest::testSingleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testDoubleQuotedEscape"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\ResourceTest::testOpen"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="542">
        <covered by="phpunit\MysqliTest::testTransactionsNoInit"/>
      </line>
      <line nr="551">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\MysqliTest::testExtractResponseNoInit"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="552">
        <covered by="phpunit\MysqliTest::testExtractResponseNoInit"/>
      </line>
      <line nr="558">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="560">
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
      </line>
      <line nr="562">
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
      </line>
      <line nr="565">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="566">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="568">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="569">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="572">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="577">
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\MysqliTest::testWarningsNoInit"/>
      </line>
      <line nr="578">
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
      </line>
      <line nr="579">
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
      </line>
      <line nr="581">
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
      </line>
      <line nr="582">
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
      </line>
      <line nr="584">
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
      </line>
      <line nr="587">
        <covered by="phpunit\MysqliTest::testWarningsNoInit"/>
      </line>
      <line nr="597">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="607">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="608">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
      <line nr="609">
        <covered by="phpunit\DeleteTest::testDelete"/>
        <covered by="phpunit\DeleteTest::testDeleteWhere"/>
        <covered by="phpunit\ExceptionTest::testTableDoesNotExist"/>
        <covered by="phpunit\ExceptionTest::testMySqlWarning"/>
        <covered by="phpunit\ExceptionTest::testMySqlError"/>
        <covered by="phpunit\InsertTest::testReplace"/>
        <covered by="phpunit\InsertTest::testReplaceOne"/>
        <covered by="phpunit\InsertTest::testInsert"/>
        <covered by="phpunit\InsertTest::testInsertMany"/>
        <covered by="phpunit\InsertTest::testInsertOne"/>
        <covered by="phpunit\MetaTest::testOpen"/>
        <covered by="phpunit\MetaTest::testClose"/>
        <covered by="phpunit\MetaTest::testPrimaryKey"/>
        <covered by="phpunit\MetaTest::testEnum"/>
        <covered by="phpunit\MetaTest::testSet"/>
        <covered by="phpunit\MetaTest::testNotRealEnumOrSet"/>
        <covered by="phpunit\MetaTest::testPrimaryKeyNotDefined"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;complex select all&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select JOIN&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select UNION&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ORDER BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select WHERE&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select COUNT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select GROUP BY&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select HAVING&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select LIMIT OFFSET&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select ALL&quot;"/>
        <covered by="phpunit\SelectTest::testSimpleSelect with data set &quot;simple select SQL_SMALL_RESULT&quot;"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadonlyReal"/>
        <covered by="phpunit\TransactionsTest::testBeginTransactionReadWriteReal"/>
        <covered by="phpunit\UpdateTest::testUpdateWhere"/>
        <covered by="phpunit\UpdateTest::testUpdate"/>
        <covered by="phpunit\UpdateTest::testUpdateMany"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * This file is part of the sshilko/php-sql-mydb package.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * (c) Sergei Shilko &lt;contact@sshilko.com&gt;</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * MIT License</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * file that was distributed with this source code.</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * @license https://opensource.org/licenses/mit-license.php MIT</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sql</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqli</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqli_result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">sql\MydbMysqli\MydbMysqliResult</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">max</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqli_query</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqli_report</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_ASYNC</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_INIT_COMMAND</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_CONNECT_TIMEOUT</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_NET_CMD_BUFFER_SIZE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_NET_READ_BUFFER_SIZE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_READ_TIMEOUT</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_ALL</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_INDEX</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_STRICT</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_STORE_RESULT_COPY_DATA</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_COR_NO_RELEASE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_COR_RELEASE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_START_READ_ONLY</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_START_READ_WRITE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT"> * Facade for php mysqli extension</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT"> * @author Sergei Shilko &lt;contact@sshilko.com&gt;</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT"> * @license https://opensource.org/licenses/mit-license.php MIT</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT"> * @see https://github.com/sshilko/php-sql-mydb</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT"> * @see https://www.php.net/manual/en/class.mysqli</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="51">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MydbMysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MydbMysqliInterface</token>
      </line>
      <line no="52">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     * Command to execute when connecting to MySQL server. Will automatically be re-executed when reconnecting.</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_INIT_COMMAND</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_INIT_COMMAND</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58"/>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     * Connect timeout in seconds</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_CONNECT_TIMEOUT</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_CONNECT_TIMEOUT</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * The size of the internal command/network buffer. Only valid for mysqlnd.</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_NET_CMD_BUFFER_SIZE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_NET_CMD_BUFFER_SIZE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70"/>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     * Maximum read chunk size in bytes when reading the body of a MySQL command packet. Only valid for mysqlnd.</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_NET_READ_BUFFER_SIZE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_NET_READ_BUFFER_SIZE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76"/>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     * Command execution result timeout in seconds. Available as of PHP 7.2.0.</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_READ_TIMEOUT</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_OPT_READ_TIMEOUT</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     * Copy results from the internal mysqlnd buffer into the PHP variables fetched.</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     * By default, mysqlnd will use a reference logic to avoid copying and duplicating results</token>
      </line>
      <line no="86">
        <token name="T_DOC_COMMENT">     * held in memory. For certain result sets, for example, result sets with many small rows,</token>
      </line>
      <line no="87">
        <token name="T_DOC_COMMENT">     * the copy approach can reduce the overall memory usage because PHP variables holding</token>
      </line>
      <line no="88">
        <token name="T_DOC_COMMENT">     * results may be released earlier (available with mysqlnd only)</token>
      </line>
      <line no="89">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="90">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_STORE_RESULT_COPY_DATA</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_STORE_RESULT_COPY_DATA</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92"/>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     * Appends "RELEASE" to mysqli_commit() or mysqli_rollback().</token>
      </line>
      <line no="95">
        <token name="T_DOC_COMMENT">     * The RELEASE clause causes the server to disconnect the current client session</token>
      </line>
      <line no="96">
        <token name="T_DOC_COMMENT">     * after terminating the current transaction</token>
      </line>
      <line no="97">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="98">
        <token name="T_DOC_COMMENT">     * @see https://dev.mysql.com/doc/refman/8.0/en/commit.html</token>
      </line>
      <line no="99">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="100">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_COR_RELEASE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_COR_RELEASE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102"/>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="104">
        <token name="T_DOC_COMMENT">     * Start the transaction as "START TRANSACTION READ ONLY" with mysqli_begin_transaction().</token>
      </line>
      <line no="105">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="106">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="107">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_START_READ_ONLY</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_START_READ_ONLY</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109"/>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="111">
        <token name="T_DOC_COMMENT">     * Start the transaction as "START TRANSACTION READ WRITE" with mysqli_begin_transaction().</token>
      </line>
      <line no="112">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="113">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_START_READ_WRITE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_START_READ_WRITE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115"/>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="117">
        <token name="T_DOC_COMMENT">     * Appends "NO RELEASE" to mysqli_commit() or mysqli_rollback().</token>
      </line>
      <line no="118">
        <token name="T_DOC_COMMENT">     * The NO RELEASE clause asks the server to not disconnect the current client session</token>
      </line>
      <line no="119">
        <token name="T_DOC_COMMENT">     * after terminating the current transaction</token>
      </line>
      <line no="120">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="121">
        <token name="T_DOC_COMMENT">     * @see https://dev.mysql.com/doc/refman/8.0/en/commit.html</token>
      </line>
      <line no="122">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="123">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_COR_NO_RELEASE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_TRANS_COR_NO_RELEASE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="127">
        <token name="T_DOC_COMMENT">     * Set all options on (report all), report all warnings/errors.</token>
      </line>
      <line no="128">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="129">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_ALL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_ALL</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132"/>
      <line no="133">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="134">
        <token name="T_DOC_COMMENT">     * Report if no index or bad index was used in a query.</token>
      </line>
      <line no="135">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="136">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="137">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_INDEX</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_INDEX</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139"/>
      <line no="140">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">     * Throw a mysqli_sql_exception for errors instead of warnings.</token>
      </line>
      <line no="142">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="143">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.constants.php</token>
      </line>
      <line no="144">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_STRICT</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_REPORT_STRICT</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146"/>
      <line no="147">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="148">
        <token name="T_DOC_COMMENT">     * Safe MySQL SQL_MODE</token>
      </line>
      <line no="149">
        <token name="T_DOC_COMMENT">     * @see https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_traditional</token>
      </line>
      <line no="150">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SQL_MODE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'TRADITIONAL'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152"/>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="154">
        <token name="T_DOC_COMMENT">     * Mysqli instance</token>
      </line>
      <line no="155">
        <token name="T_DOC_COMMENT">     * The mysqli extension allows you to access the functionality provided by MySQL 4.1 and above</token>
      </line>
      <line no="156">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="157">
        <token name="T_DOC_COMMENT">     * @see http://dev.mysql.com/doc/</token>
      </line>
      <line no="158">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.overview.php</token>
      </line>
      <line no="159">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/intro.mysqli.php</token>
      </line>
      <line no="160">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/class.mysqli</token>
      </line>
      <line no="161">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="163"/>
      <line no="164">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="165">
        <token name="T_DOC_COMMENT">     * Flag indicating whether physical connection was established with remote server</token>
      </line>
      <line no="166">
        <token name="T_DOC_COMMENT">     * Is connected to remove server</token>
      </line>
      <line no="167">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isConnected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169"/>
      <line no="170">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="171">
        <token name="T_DOC_COMMENT">     * Flag indicating whether SQL transaction was started</token>
      </line>
      <line no="172">
        <token name="T_DOC_COMMENT">     * WARNING: best-effort, only guaranteed when library is used correctly</token>
      </line>
      <line no="173">
        <token name="T_DOC_COMMENT">     * Is transaction started</token>
      </line>
      <line no="174">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176"/>
      <line no="177">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resource</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$resource</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="182"/>
      <line no="183">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resource</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="185"/>
      <line no="186">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="187">
        <token name="T_DOC_COMMENT">     * Allocate mysqli resource instance, no physical connection to remote is done</token>
      </line>
      <line no="188">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="189">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">init</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="194">
        <token name="T_DOC_COMMENT">             * Prevent zombie connections</token>
      </line>
      <line no="195">
        <token name="T_DOC_COMMENT">             */</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="198"/>
      <line no="199">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="200">
        <token name="T_DOC_COMMENT">         * @see https://php.net/manual/en/mysqli.construct.php</token>
      </line>
      <line no="201">
        <token name="T_DOC_COMMENT">         * @see https://wiki.php.net/rfc/improve_mysqli</token>
      </line>
      <line no="202">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$init</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$init</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205"/>
      <line no="206">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="208"/>
      <line no="209">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="210">
        <token name="T_DOC_COMMENT">     * Set various options that affect mysqli resource, before connection is established</token>
      </line>
      <line no="211">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="212">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.options.php</token>
      </line>
      <line no="213">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\EnvironmentException</token>
      </line>
      <line no="214">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setTransportOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">MydbOptionsInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MydbEnvironmentInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$environment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="220"/>
      <line no="221">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$ignoreUserAbort</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$environment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">ignore_user_abort</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$selectTimeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getServerSideSelectTimeout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="223"/>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="225">
        <token name="T_DOC_COMMENT">         * Prevent entry of invalid values such as those that are out of range, or NULL specified for NOT NULL columns</token>
      </line>
      <line no="226">
        <token name="T_DOC_COMMENT">         * TRADITIONAL = strict mode</token>
      </line>
      <line no="227">
        <token name="T_DOC_COMMENT">         *</token>
      </line>
      <line no="228">
        <token name="T_DOC_COMMENT">         * @see https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_traditional</token>
      </line>
      <line no="229">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$mysqliInit</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'SET SESSION sql_mode = %s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SQL_MODE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ignoreUserAbort</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$mysqliInit</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">', SESSION max_execution_time = %s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$selectTimeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">10000</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="234"/>
      <line no="235">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$connectTimeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConnectTimeout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$readTimeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getReadTimeout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$netReadTimeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">max</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$selectTimeout</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$readTimeout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$connectTimeout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="238"/>
      <line no="239">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$environment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setMysqlndNetReadTimeout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$netReadTimeout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_INIT_COMMAND</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mysqliInit</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_OPT_CONNECT_TIMEOUT</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$connectTimeout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_OPT_READ_TIMEOUT</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$readTimeout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_OPT_NET_CMD_BUFFER_SIZE</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getNetworkBufferSize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_OPT_NET_READ_BUFFER_SIZE</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getNetworkReadBuffer</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="247"/>
      <line no="248">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setTransactionIsolationLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$level</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">realQuery</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'SET SESSION TRANSACTION ISOLATION LEVEL %s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$level</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="252"/>
      <line no="253">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isTransactionOpen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="256">
        <token name="T_DOC_COMMENT">         * Ignore autocommit setting here</token>
      </line>
      <line no="257">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isTransaction</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="260"/>
      <line no="261">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="265"/>
      <line no="266">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getMysqli</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">mysqli</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="270"/>
      <line no="271">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="272">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.real-query.php</token>
      </line>
      <line no="273">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="274">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">realQuery</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$query</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="277">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">real_query</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$query</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="278">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="279"/>
      <line no="280">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="282"/>
      <line no="283">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="284">
        <token name="T_DOC_COMMENT">     * React to mysqli resource changes after query/command execution</token>
      </line>
      <line no="285">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">readServerResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">MydbEnvironmentInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$environment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">MydbMysqliResult</token>
      </line>
      <line no="287">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="288">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="290"/>
      <line no="291">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="292">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="293">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extractServerResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$environment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="294"/>
      <line no="295">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fieldsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFieldCount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="296"/>
      <line no="297">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getWarningCount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getWarnings</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="299">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="300">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="303"/>
      <line no="304">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/** @var array&lt;array-key, string&gt; $warnings */</token>
      </line>
      <line no="305">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MydbMysqliResult</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fieldsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="306"/>
      <line no="307">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setErrorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="311"/>
      <line no="312">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$errno</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getErrNo</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errno</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setErrorNumber</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errno</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="316"/>
      <line no="317">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="319"/>
      <line no="320">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="321">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="322"/>
      <line no="323">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="324">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.real-escape-string.php</token>
      </line>
      <line no="325">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">realEscapeString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$string</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="327">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="329">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="331"/>
      <line no="332">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">real_escape_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$string</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="333">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="334"/>
      <line no="335">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="336">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.begin-transaction.php</token>
      </line>
      <line no="337">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="338">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">beginTransactionReadwrite</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="339">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="340">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="341">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="342">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">begin_transaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_TRANS_START_READ_WRITE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="343">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="344"/>
      <line no="345">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="346">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="347"/>
      <line no="348">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="349">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="350"/>
      <line no="351">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="352">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.begin-transaction.php</token>
      </line>
      <line no="353">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="354">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">beginTransactionReadonly</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="355">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="356">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="357">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
      </line>
      <line no="358">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">begin_transaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_TRANS_START_READ_ONLY</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="359">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="360"/>
      <line no="361">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="362">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="363"/>
      <line no="364">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="365">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="366"/>
      <line no="367">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="368">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/mysqli.rollback.php</token>
      </line>
      <line no="369">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="370">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rollback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="371">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="372">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">rollback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_TRANS_COR_NO_RELEASE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="373">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="374"/>
      <line no="375">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="376">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="377"/>
      <line no="378">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="379">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="380"/>
      <line no="381">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="382">
        <token name="T_DOC_COMMENT">     * Commit transaction and release connection from server side</token>
      </line>
      <line no="383">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="384">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">commitAndRelease</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="385">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="386">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">commit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_TRANS_COR_RELEASE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="387">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="388"/>
      <line no="389">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="390">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="391"/>
      <line no="392">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="393">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="394"/>
      <line no="395">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">commit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="396">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="397">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">commit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_TRANS_COR_NO_RELEASE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="398">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="399"/>
      <line no="400">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="401">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="402"/>
      <line no="403">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="405"/>
      <line no="406">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">realConnect</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="407">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$host</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="408">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="409">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="410">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dbname</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="411">
        <token name="T_WHITESPACE">        </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$port</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="412">
        <token name="T_WHITESPACE">        </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$socket</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="413">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$flags</token>
      </line>
      <line no="414">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="415">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">real_connect</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="416">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$host</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="417">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="418">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="419">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$dbname</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="420">
        <token name="T_WHITESPACE">            </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$port</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="421">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$socket</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="422">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$flags</token>
      </line>
      <line no="423">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="424">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="425"/>
      <line no="426">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="427">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="428"/>
      <line no="429">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="430">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="431"/>
      <line no="432">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqliReport</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$level</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="433">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="434">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqli_report</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$level</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="435">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="436"/>
      <line no="437">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqliQueryAsync</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$command</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="438">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="439">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMysqli</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="440">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="441">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="442">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="443"/>
      <line no="444">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mysqli_query</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$mysqli</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$command</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MYSQLI_ASYNC</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="445">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="446"/>
      <line no="447">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">close</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="448">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="449">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="450">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="451">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="452">
        <token name="T_DOC_COMMENT">                 * Ignore close() success/failure</token>
      </line>
      <line no="453">
        <token name="T_DOC_COMMENT">                 */</token>
      </line>
      <line no="454">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">close</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="455">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isConnected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="456">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="457"/>
      <line no="458">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="459"/>
      <line no="460">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="461">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="462"/>
      <line no="463">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="464">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="465"/>
      <line no="466">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getConnectErrno</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="467">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="468">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
      </line>
      <line no="469">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">connect_errno</token>
      </line>
      <line no="470">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="471">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="472"/>
      <line no="473">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getConnectError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="474">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="475">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
      </line>
      <line no="476">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">connect_error</token>
      </line>
      <line no="477">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="478">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="479"/>
      <line no="480">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isServerGone</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="481">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="482">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getErrNo</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2002</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2006</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="483">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="484"/>
      <line no="485">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="486">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="487">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
      </line>
      <line no="488">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">error</token>
      </line>
      <line no="489">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="490">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="491"/>
      <line no="492">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getErrNo</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="493">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="494">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
      </line>
      <line no="495">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errno</token>
      </line>
      <line no="496">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="497">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="498"/>
      <line no="499">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getAffectedRows</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="500">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="501">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$rows</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
      </line>
      <line no="502">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">affected_rows</token>
      </line>
      <line no="503">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="504">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rows</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rows</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="505">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rows</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="506">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="507"/>
      <line no="508">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="509">
        <token name="T_DOC_COMMENT">         * mysqli_affected_rows</token>
      </line>
      <line no="510">
        <token name="T_DOC_COMMENT">         * An integer greater than zero indicates the number of rows affected or retrieved.</token>
      </line>
      <line no="511">
        <token name="T_DOC_COMMENT">         * Zero indicates that no records where updated for an UPDATE statement,</token>
      </line>
      <line no="512">
        <token name="T_DOC_COMMENT">         * no rows matched the WHERE clause in the query or that no query has yet been executed.</token>
      </line>
      <line no="513">
        <token name="T_DOC_COMMENT">         * -1 indicates that the query returned an error.</token>
      </line>
      <line no="514">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="515">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="516">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="517"/>
      <line no="518">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="519">
        <token name="T_DOC_COMMENT">     * @return int|string|null</token>
      </line>
      <line no="520">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="521">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getInsertId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="522">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="523">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
      </line>
      <line no="524">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">insert_id</token>
      </line>
      <line no="525">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="526">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="527"/>
      <line no="528">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">autocommit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$enable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="529">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="530">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">autocommit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$enable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="531">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$enable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="532">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="533">
        <token name="T_DOC_COMMENT">                 * Some statement implicitly commit transaction</token>
      </line>
      <line no="534">
        <token name="T_DOC_COMMENT">                 * @see https://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html</token>
      </line>
      <line no="535">
        <token name="T_DOC_COMMENT">                 */</token>
      </line>
      <line no="536">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="537">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="538"/>
      <line no="539">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="540">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="541"/>
      <line no="542">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="543">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="544"/>
      <line no="545">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="546">
        <token name="T_DOC_COMMENT">     * @phpcs:disable SlevomatCodingStandard.PHP.DisallowReference.DisallowedPassingByReference</token>
      </line>
      <line no="547">
        <token name="T_DOC_COMMENT">     * @param array&lt;int, string&gt; $events</token>
      </line>
      <line no="548">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="549">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">extractServerResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">MydbEnvironmentInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$environment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG">&amp;</token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">mysqli_result</token>
      </line>
      <line no="550">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="551">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="552">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="553">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="554"/>
      <line no="555">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="556">
        <token name="T_DOC_COMMENT">         * @psalm-suppress UnusedClosureParam</token>
      </line>
      <line no="557">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="558">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$environment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set_error_handler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errno</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG">&amp;</token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="559">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/** @var array&lt;int, string&gt; $events */</token>
      </line>
      <line no="560">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$errno</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="561"/>
      <line no="562">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="563">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="564"/>
      <line no="565">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">store_result</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MYSQLI_STORE_RESULT_COPY_DATA</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="566">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$environment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">restore_error_handler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="567"/>
      <line no="568">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="569">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="570">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="571"/>
      <line no="572">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="573">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="574"/>
      <line no="575">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getWarnings</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="576">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="577">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="578">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_warnings</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="579">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="580">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DO">do</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="581">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">message</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="582">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_WHILE">while</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$warnings</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">next</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="583"/>
      <line no="584">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="585">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="586"/>
      <line no="587">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="588">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="589"/>
      <line no="590">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="591">
        <token name="T_DOC_COMMENT">     * Returns fields count caused by query execution</token>
      </line>
      <line no="592">
        <token name="T_DOC_COMMENT">     * Requires store_result to be called first</token>
      </line>
      <line no="593">
        <token name="T_DOC_COMMENT">     * @see mysqli::store_result()</token>
      </line>
      <line no="594">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="595">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getFieldCount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="596">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="597">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">field_count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="598">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="599"/>
      <line no="600">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="601">
        <token name="T_DOC_COMMENT">     * Returns warnings caused by query execution</token>
      </line>
      <line no="602">
        <token name="T_DOC_COMMENT">     * Requires store_result to be called first</token>
      </line>
      <line no="603">
        <token name="T_DOC_COMMENT">     * @see mysqli::store_result()</token>
      </line>
      <line no="604">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="605">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getWarningCount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="606">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="607">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
      </line>
      <line no="608">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mysqli</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">warning_count</token>
      </line>
      <line no="609">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="610">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="611">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="612"/>
    </source>
  </file>
</phpunit>
