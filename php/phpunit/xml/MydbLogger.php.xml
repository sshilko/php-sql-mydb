<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="MydbLogger.php" path="/">
    <totals>
      <lines total="343" comments="130" code="213" executable="61" executed="61" percent="100.00"/>
      <methods count="15" tested="15" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="sql\MydbLogger" start="48" executable="61" executed="61" crap="42">
      <namespace name="sql"/>
      <method name="__construct" signature="__construct($stdout, $stderr, string $stdeol)" start="79" end="91" crap="3" executable="5" executed="5" coverage="100"/>
      <method name="__destruct" signature="__destruct()" start="93" end="111" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="error" signature="error($message, array $context): void" start="117" end="128" crap="4" executable="5" executed="5" coverage="100"/>
      <method name="log" signature="log($level, $message, array $context): void" start="136" end="147" crap="4" executable="5" executed="5" coverage="100"/>
      <method name="warning" signature="warning($message, array $context): void" start="153" end="156" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="emergency" signature="emergency($message, array $context): void" start="162" end="165" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="alert" signature="alert($message, array $context): void" start="171" end="174" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="critical" signature="critical($message, array $context): void" start="180" end="183" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="notice" signature="notice($message, array $context): void" start="189" end="192" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="info" signature="info($message, array $context): void" start="198" end="201" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="debug" signature="debug($message, array $context): void" start="207" end="210" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="checkStreamResource" signature="checkStreamResource($stream): void" start="217" end="237" crap="7" executable="7" executed="7" coverage="100"/>
      <method name="writeOutput" signature="writeOutput($stream, string $data): void" start="246" end="296" crap="9" executable="13" executed="13" coverage="100"/>
      <method name="fwrite" signature="fwrite($stream, string $data): ?int" start="301" end="329" crap="3" executable="9" executed="9" coverage="100"/>
      <method name="formatter" signature="formatter($var): string" start="334" end="341" crap="2" executable="3" executed="3" coverage="100"/>
    </class>
    <coverage>
      <line nr="84">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="85">
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
      </line>
      <line nr="88">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="89">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="90">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="98">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="99">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="100">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="106">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="107">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="108">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="110">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorOut"/>
        <covered by="phpunit\LoggerTest::testLoggerConstructorErr"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="119">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
      </line>
      <line nr="120">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
      </line>
      <line nr="123">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
      </line>
      <line nr="124">
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
      </line>
      <line nr="127">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
      </line>
      <line nr="138">
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="139">
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
      </line>
      <line nr="142">
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="143">
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
      </line>
      <line nr="146">
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="155">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
      </line>
      <line nr="164">
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
      </line>
      <line nr="173">
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
      </line>
      <line nr="182">
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
      </line>
      <line nr="191">
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
      </line>
      <line nr="200">
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
      </line>
      <line nr="209">
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
      </line>
      <line nr="224">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="225">
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
      </line>
      <line nr="228">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="230">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="231">
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
      </line>
      <line nr="234">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="235">
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
      </line>
      <line nr="248">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="250">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="251">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="254">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="255">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="256">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="262">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="264">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="270">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="276">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="278">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="284">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="290">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="303">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="308">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="309">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="315">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="318">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="320">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="322">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="328">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="336">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="337">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrClosed"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamErrBadMode"/>
        <covered by="phpunit\LoggerTest::testLoggerStreamOutEnd"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
      </line>
      <line nr="340">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
      <line nr="316">
        <covered by="phpunit\LoggerTest::testLoggerError"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-array&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;nothing-error&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;something&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithStrings with data set &quot;chars&quot;"/>
        <covered by="phpunit\LoggerTest::testLoggerWithContext"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * This file is part of the sshilko/php-sql-mydb package.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * (c) Sergei Shilko &lt;contact@sshilko.com&gt;</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * MIT License</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * file that was distributed with this source code.</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * @license https://opensource.org/licenses/mit-license.php MIT</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sql</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Log\LoggerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Log\LogLevel</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">sql\MydbException\LoggerException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">clearstatcache</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fclose</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">feof</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fflush</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fwrite</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_resource</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">restore_error_handler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">set_error_handler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">stream_get_meta_data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strlen</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtr</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">var_export</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">STDERR</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">STDOUT</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT"> * Implementation of PSR-3 Logger that will output to STDERR &amp; STDOUT</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT"> * @author Sergei Shilko &lt;contact@sshilko.com&gt;</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT"> * @license https://opensource.org/licenses/mit-license.php MIT</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT"> * @see https://github.com/sshilko/php-sql-mydb</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT"> * @see https://www.php-fig.org/psr/psr-3/</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="48">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MydbLogger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerInterface</token>
      </line>
      <line no="49">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">IO_WRITE_ATTEMPTS</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51"/>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * Opened resource, STDOUT</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/features.commandline.io-streams.php</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     * @var resource</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stdout</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     * Opened resource, STDERR</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     * @see https://www.php.net/manual/en/features.commandline.io-streams.php</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * @var resource</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stderr</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67"/>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     * End of line delimiter</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stdeol</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     * @param resource $stdout</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     * @param resource $stderr</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     * @psalm-suppress MissingParamType</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stdout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">STDOUT</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stderr</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">STDERR</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stdeol</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">         * @psalm-suppress DocblockTypeContradiction</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_resource</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stdout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_resource</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stderr</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="87"/>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stdout</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stderr</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stderr</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdeol</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stdeol</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92"/>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__destruct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="96">
        <token name="T_DOC_COMMENT">         * @psalm-suppress RedundantConditionGivenDocblockType</token>
      </line>
      <line no="97">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_resource</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">fflush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">fclose</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdout</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="102"/>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="104">
        <token name="T_DOC_COMMENT">         * @psalm-suppress RedundantConditionGivenDocblockType</token>
      </line>
      <line no="105">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_resource</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stderr</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">fflush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stderr</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">fclose</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stderr</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">clearstatcache</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="112"/>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="114">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="115">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="116">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">writeOutput</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stderr</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">formatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdeol</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="122"/>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">writeOutput</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stderr</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">formatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdeol</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="129"/>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="131">
        <token name="T_DOC_COMMENT">     * @param mixed $level</token>
      </line>
      <line no="132">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="133">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="134">
        <token name="T_DOC_COMMENT">     * @phpcs:disable SlevomatCodingStandard.Functions.UnusedParameter.UnusedParameter</token>
      </line>
      <line no="135">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$level</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">writeOutput</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdout</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">formatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdeol</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="141"/>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="145"/>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">writeOutput</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdout</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">formatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stdeol</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="148"/>
      <line no="149">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="150">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="151">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="152">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">warning</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="157"/>
      <line no="158">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="159">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="160">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="161">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">emergency</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="166"/>
      <line no="167">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="168">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="169">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="170">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">alert</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="175"/>
      <line no="176">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="177">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="178">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="179">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">critical</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="184"/>
      <line no="185">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="186">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="187">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="188">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">notice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">LogLevel</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">NOTICE</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="193"/>
      <line no="194">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="195">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="196">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="197">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">info</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">LogLevel</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">INFO</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="202"/>
      <line no="203">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="204">
        <token name="T_DOC_COMMENT">     * @param array|string $message</token>
      </line>
      <line no="205">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="206">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">LogLevel</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEBUG</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="211"/>
      <line no="212">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="213">
        <token name="T_DOC_COMMENT">     * @param resource $stream &amp;fs.file.pointer;</token>
      </line>
      <line no="214">
        <token name="T_DOC_COMMENT">     * @link https://php.net/manual/en/function.fwrite.php</token>
      </line>
      <line no="215">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="216">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">checkStreamResource</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="220">
        <token name="T_DOC_COMMENT">         * is_resource checks whether resource was closed with i.e. fclose()</token>
      </line>
      <line no="221">
        <token name="T_DOC_COMMENT">         * @psalm-suppress DocblockTypeContradiction</token>
      </line>
      <line no="222">
        <token name="T_DOC_COMMENT">         * @psalm-suppress RedundantConditionGivenDocblockType</token>
      </line>
      <line no="223">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_resource</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Stream resource is not valid or already closed'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="227"/>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$info</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">stream_get_meta_data</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229"/>
      <line no="230">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$info</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'timed_out'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$info</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'eof'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">feof</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="233"/>
      <line no="234">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$info</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mode'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$info</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mode'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'waxc+'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.....'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$info</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mode'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Stream resource is not opened in write mode'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="238"/>
      <line no="239">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="240">
        <token name="T_DOC_COMMENT">     * @param resource $stream &amp;fs.file.pointer;</token>
      </line>
      <line no="241">
        <token name="T_DOC_COMMENT">     * @link https://php.net/manual/en/function.fwrite.php</token>
      </line>
      <line no="242">
        <token name="T_DOC_COMMENT">     * @throws \sql\MydbException\LoggerException</token>
      </line>
      <line no="243">
        <token name="T_DOC_COMMENT">     * @psalm-suppress MissingParamType</token>
      </line>
      <line no="244">
        <token name="T_DOC_COMMENT">     * @phpcs:disable SlevomatCodingStandard.Complexity.Cognitive.ComplexityTooHigh</token>
      </line>
      <line no="245">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">writeOutput</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkStreamResource</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="249"/>
      <line no="250">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tries</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">IO_WRITE_ATTEMPTS</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$len</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="252"/>
      <line no="253">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @phan-suppress-next-line PhanNoopConstant */</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$written</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$written</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$len</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$chunk</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$written</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunk</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="261"/>
      <line no="262">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$writeResult</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fwrite</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunk</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="263"/>
      <line no="264">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$writeResult</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">feof</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="269"/>
      <line no="270">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fflush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="274">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="275"/>
      <line no="276">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$written</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$writeResult</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="277"/>
      <line no="278">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$written</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$len</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="279">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="280">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="282">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="283"/>
      <line no="284">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$writeResult</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="285">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DEC">--</token>
        <token name="T_VARIABLE">$tries</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="287">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="288">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="289"/>
      <line no="290">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tries</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="292">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="293">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="294">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="295">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="296">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="297"/>
      <line no="298">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="299">
        <token name="T_DOC_COMMENT">     * @param resource $stream</token>
      </line>
      <line no="300">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fwrite</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="303">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="304"/>
      <line no="305">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="306">
        <token name="T_DOC_COMMENT">         * @psalm-suppress InvalidArgument</token>
      </line>
      <line no="307">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">set_error_handler</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$_</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errstr</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG">&amp;</token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errstr</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="312"/>
      <line no="313">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="317"/>
      <line no="318">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$sent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fwrite</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stream</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="319"/>
      <line no="320">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">restore_error_handler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="321"/>
      <line no="322">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sent</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="323">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="324">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="327"/>
      <line no="328">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sent</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="329">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="330"/>
      <line no="331">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="332">
        <token name="T_DOC_COMMENT">     * @param string|array $var</token>
      </line>
      <line no="333">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="334">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">formatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$var</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="335">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="336">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$var</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="337">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$var</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="338">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="339"/>
      <line no="340">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">var_export</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$var</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="341">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="342">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="343"/>
    </source>
  </file>
</phpunit>
