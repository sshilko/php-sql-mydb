name: PHPUnit

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci]')"
    timeout-minutes: 6

    steps:
      # https://github.com/actions/checkout
    - uses: actions/checkout@v3

      # OPTIONAL
      # https://depot.dev/blog/docker-layer-caching-in-github-actions
      # pre-build the build/Dockerfile with caching
    - uses: docker/setup-buildx-action@v1
    - uses: docker/build-push-action@v2
      with:
        context: ./build
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Docker build
      run: docker-compose build
      timeout-minutes: 3

    - name: Docker boot
      run: docker-compose up --no-build --no-color -d
      timeout-minutes: 2

    - name: Docker eficode/wait-for
      run: wget -qO- https://raw.githubusercontent.com/eficode/wait-for/v2.2.3/wait-for | sh -s -- 127.0.0.1:3306 -- echo success
      timeout-minutes: 2

    - name: Docker install dependencies
      run: docker-compose exec -T app composer install --dev

    - name: Sleep
      run: sleep 5

      # Docs: https://phpunit.readthedocs.io/en/9.5/
    - name: Docker run PHPUnit
      run: docker-compose exec -T app composer app-phpunit-coverage

      # Docs: https://github.com/marketplace/actions/phpunit-coverage-badge
    - name: Generate PHPUnit coverage badge
      uses: timkrase/phpunit-coverage-badge@v1.2.0
      with:
        coverage_badge_path: 'doc/phpunit-coverage-badge.svg'
        push_badge: false
        report: test/clover.xml

      # https://github.com/actions/upload-artifact
    - name: Upload PHPUnit coverage badge as artifact
      uses: actions/upload-artifact@v3
      with:
        name: phpunit-coverage-badge
        path: doc/phpunit-coverage-badge.svg
        retention-days: 1

    - name: Shutdown docker
      run: docker-compose down
      timeout-minutes: 1

  badges:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      # https://github.com/actions/checkout
    - name: Checkout badges branch
      uses: actions/checkout@v3
      with:
        token: ${{ github.token }}
        ref: badges

      #https://github.com/marketplace/actions/download-a-build-artifact
    - name: Download PHPUnit coverage badge as artifact
      uses: actions/download-artifact@v3.0.1
      with:
        name: phpunit-coverage-badge
        path: phpunit-coverage-badge.svg

    - run: |
        git status
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add phpunit-coverage-badge.svg
        git commit -m "generated phpunit-coverage-badge.svg from revision ${GITHUB_SHA::6}"
        git push

